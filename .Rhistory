}
#Test out my new function
summary_graph_nolegend(df=dat, question_fact=eh_questions[1])
#Run it on all my demographics variables
x <- lapply(summary_questions, FUN=summary_graph_nolegend, df=dat)
#x_legend <- cowplot::get_legend(summary_graph(df=dat, question_fact=eh_questions[1]))
#x <- x %>% append(x_legend)
#?plot_grid # Had to check how plotlsit variable worked.
cowplot::plot_grid(plotlist=x, ncol=2, rel_widths = c(1,1,0.5))
df %>%
filter(question==question_fact) %>%
ggplot(aes(x=response, y=overall *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(legend.position="none",
text = element_text(size=10)) +
ggtitle(question_fact) +
NULL
summary_graph_nolegend <- function(df, question_fact){
df %>%
filter(question==question_fact) %>%
ggplot(aes(x=response, y=overall *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(legend.position="none",
text = element_text(size=10)) +
ggtitle(question_fact) +
NULL
}
#Test out my new function
summary_graph_nolegend(df=dat, question_fact=eh_questions[1])
#Test out my new function
summary_graph_nolegend(df=dat, question_fact=eh_questions[1])
#Run it on all my demographics variables
x <- lapply(summary_questions, FUN=summary_graph_nolegend, df=dat)
#Run it on all my demographics variables
x <- lapply(summary_questions, FUN=summary_graph_nolegend, df=dat)
#x_legend <- cowplot::get_legend(summary_graph(df=dat, question_fact=eh_questions[1]))
#x <- x %>% append(x_legend)
#?plot_grid # Had to check how plotlsit variable worked.
cowplot::plot_grid(plotlist=x, ncol=2, rel_widths = c(1,1,0.5))
#x_legend <- cowplot::get_legend(summary_graph(df=dat, question_fact=eh_questions[1]))
#x <- x %>% append(x_legend)
#?plot_grid # Had to check how plotlsit variable worked.
cowplot::plot_grid(plotlist=x, ncol=2, rel_widths = c(1,1,0.5))
question_of_interest = "Feel lonely or isolated"
question_fact = "Feel lonely or isolated"
dat %>% filter(question==question_fact) %>%
ggplot(aes(x=response, y=overall *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(legend.position="none",
text = element_text(size=10)) +
ggtitle(question_fact) +
NULL
dat %>% filter(question==question_fact) %>%
gather(key="age", value="value", -response:-overall)
dat %>% filter(question==question_fact) %>%
gather(key="age", value="value", -question:-overall)
tidy_dat <- dat %>% filter(question==question_fact) %>%
gather(key="age", value="value", -question:-overall)
tidy_dat %>%
ggplot(aes(x=response, y=overall *100, fill=)) +
geom_col() +
ylab("Percent of sample") +
theme(legend.position="none",
text = element_text(size=10)) +
ggtitle(question_fact) +
NULL
View(tidy_dat)
tidy_dat <- dat %>% filter(question==question_fact) %>%
gather(key="demographic", value="value", -question:-overall)
tidy_dat %>%
ggplot(aes(x=response, y=overall *100, fill=demographic)) +
geom_col() +
ylab("Percent of sample") +
theme(legend.position="none",
text = element_text(size=10)) +
ggtitle(question_fact) +
NULL
tidy_dat %>%
ggplot(aes(x=response, y=overall *100, fill=demographic)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10)) +
ggtitle(question_fact) +
NULL
tidy_dat <- dat %>%
gather(key="demographic", value="value", -question:-overall)
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
ggplot(aes(x=response, y=overall *100, fill=demographic)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10)) +
ggtitle(question_fact) +
NULL
View(tidy_dat)
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10)) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
NULL
?theme
axis.text.x = element_blank()) +
axis.text.x = element_blank()) +
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
NULL
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
mutate(response = fct_relevel(response, c("No answer", "Never, and not open to it", "Never, but open to it", "Rarely", "Sometimes", "Often")))
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
mutate(response = fct_relevel(response, c("No answer", "Never, and not open to it", "Never, but open to it", "Rarely", "Sometimes", "Often"))) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
NULL
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
mutate(response = fct_relevel(response, c("No answer", "Never, and not open to it", "Never, but open to it", "Rarely", "Sometimes", "Often"))) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis() +
NULL
?viridis::scale_fill_viridis()
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
mutate(response = fct_relevel(response, c("No answer", "Never, and not open to it", "Never, but open to it", "Rarely", "Sometimes", "Often"))) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T) +
NULL
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
mutate(response = fct_relevel(response, c("No answer", "Never, and not open to it", "Never, but open to it", "Rarely", "Sometimes", "Often"))) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=-1) +
NULL
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
mutate(response = fct_relevel(response, c("No answer", "Never, and not open to it", "Never, but open to it", "Rarely", "Sometimes", "Often"))) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=-1) +
NULL
View(tidy_dat)
summary_questions <- c("age", "What is the last grade of school you completed?", "Are you:",
"Would you describe your sexual orientation as:", "Do you have any children? (Select all that apply.)", "Are you now married, widowed, divorced, separated, or have you never been married?", "Which of the following categories best describes your employment status?")
summary_graph <- function(df, question_fact){
df %>%
filter(question==question_fact) %>%
ggplot(aes(x=response, y=overall *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
NULL
}
#Test out my new function
summary_graph(df=dat, question_fact=summary_questions[1])
View(tidy_dat)
question_fact <- "Ask a friend for personal advice"
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
mutate(response = fct_relevel(response, c("No answer", "Never, and not open to it", "Never, but open to it", "Rarely", "Sometimes", "Often"))) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=-1) +
NULL
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
mutate(response = fct_relevel(response, c("No answer", "Never, and not open to it", "Never, but open to it", "Rarely", "Sometimes", "Often"))) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=1) +
NULL
Over the past 12 months, when it comes to sexual boundaries, which of the following things have you done? (Select all that apply.)
View(tidy_dat)
df %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern=demographic_pattern)) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=1) +
NULL
sub_question <- function(df=tidy_dat, question_fact=NA, demographic_pattern=NA){
df %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern=demographic_pattern)) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=1) +
NULL
}
sub_question(df=tidy_dat, question_fact="Ask a friend for personal advice",
demographic_pattern = "straight")
?fct_relevel
tidy_dat <- dat %>%
gather(key="demographic", value="value", -question:-overall) %>%
mutate(response = fct_relevel(response, c("No answer", "Never, and not open to it", "Never, but open to it", "Rarely", "Sometimes", "Often"), after=0))
question_fact = "Feel lonely or isolated"
tidy_dat <- dat %>%
gather(key="demographic", value="value", -question:-overall) %>%
mutate(response = fct_relevel(response, c("No answer", "Never, and not open to it", "Never, but open to it", "Rarely", "Sometimes", "Often"), after=0))
#Save this as a variable so I can review later.
#Lots of the response variables are Likert scale formatter so I order them. It doesn't affect the other variables.
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
NULL
tidy_dat %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern="age")) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=-1) +
NULL
#?viridis::scale_fill_viridis() #This is a great colour palette for R. I switch direction to be -1 to get darker colours at the 'darker' end of the spectrum  and switch to discrete values
question_fact <- "Ask a friend for personal advice"
sub_question <- function(df=tidy_dat, question_fact=NA, demographic_pattern=NA){
df %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern=demographic_pattern)) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=1) +
NULL
}
sub_question(df=tidy_dat, question_fact="Ask a friend for personal advice",
demographic_pattern = "straight")
demographic_pattern <- c("straight", "age", "white", "children")
sub_question(df=tidy_dat, question_fact="Ask a friend for personal advice",
demographic_pattern = "straight")
lapply(demographic_pattern, FUN=sub_question, question_fact="Ask a friend for personal advice")
#I could lapply this because there's only 4
demographic_pattern <- c("straight", "age", "white", "children")
lapply(demographic_pattern, FUN=sub_question, question_fact="Ask a friend for personal advice")
lapply(demographic_pattern, FUN=sub_question, df=tidy_dat, question_fact="Ask a friend for personal advice")
tidy_dat <- tidy_dat %>%
mutate(response_binary = if_else(respone=="Sometimes|Often", 1, 0))
tidy_dat <- tidy_dat %>%
mutate(response_binary = if_else(response=="Sometimes|Often", 1, 0))
View(tidy_dat)
tidy_dat <- tidy_dat %>%
mutate(response_binary = if_else(response=="Sometimes"|response=="Often", 1, 0))
aata_questions <- grepl(unique(dat$question, pattern="all that apply"))
aata_questions <- grepl(unique(dat$question), pattern="all that apply"))
aata_questions <- grepl(unique(dat$question), pattern="all that apply")
aata_questions
aata_questions <- grep(unique(dat$question), pattern="all that apply")
aata_questions
aata_questions <- unique(dat$question)[grepl(unique(dat$question), pattern="all that apply")]
aata_questions
aata_plots <- function(df, question_fact)
aata_plots <- function(df, question_fact, demographic_pattern)
aata_plots <- function(df, question_fact, demographic_pattern){
df %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern=demographic_pattern)) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
coord_flip() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=1) +
NULL
}
aata_plots(df=dat_tidy, question=aata_questions[1], demographic_pattern="age")
aata_plots <- function(df, question_fact, demographic_pattern){
df %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern=demographic_pattern)) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
coord_flip() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=1) +
NULL
}
aata_plots(df=dat_tidy, question=aata_questions[1], demographic_pattern="age")
df %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern=demographic_pattern)) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
coord_flip() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank()) +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=1) +
NULL
demographic_pattern
#I could lapply this because there's only 4
demographic_patterns <- c("straight", "age", "white", "children")
rm(demographic_pattern)
aata_plots(df=dat_tidy, question=aata_questions[1], demographic_pattern="age")
aata_plots(df=tidy_dat, question=aata_questions[1], demographic_pattern="age")
knitr::opts_chunk$set(echo = TRUE)
library(fivethirtyeight)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyverse", "fivethirtyeight")
ipak(packages)
theme_set(theme_classic())
df %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern=demographic_pattern)) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
coord_flip() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank(),
legend.position="none") +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=1) +
NULL
aata_plots <- function(df, question_fact, demographic_pattern){
df %>%
filter(question==question_fact) %>%
filter(grepl(demographic, pattern=demographic_pattern)) %>%
ggplot(aes(x=response, y=value *100, fill=response)) +
geom_col() +
coord_flip() +
ylab("Percent of sample") +
theme(text = element_text(size=10),
axis.text.x = element_blank(),
legend.position="none") +
ggtitle(question_fact) +
facet_wrap(~demographic) +
viridis::scale_fill_viridis(discrete=T, direction=1) +
NULL
}
aata_plots(df=tidy_dat, question=aata_questions[1], demographic_pattern="age")
posts <- list.files("./_posts")[grepl(list.files("./_posts"), pattern="\\.html")]
post_name <- gsub(post, pattern="\\.html", replacement="")
posts <- list.files("./_posts")[grepl(list.files("./_posts"), pattern="\\.html")]
post <- posts[1]
for (post in posts){
post_name <- gsub(post, pattern="\\.html", replacement="")
url <- file.path("./_posts", post)
metadata <- readr::read_csv(file.path("./_posts", "metadata", paste(post_name, ".csv", sep="")))
title <- metadata$title
excerpt <- as.character(metadata$excerpt)
# post_text <- readr::read_file(file.path("./_posts", post))
# title <- gsub(post_text, pattern=".*\\\ntitle: \\\"", replacement="")
# title <- gsub(title, pattern="\\\".*", replacement="")
img_link <- metadata$image_link
cat('<h3><a href=', url, '>', title,' </a></h3><br>')
cat(excerpt, "...")
cat(img_link)
}
url
posts <- list.files("./_posts")[grepl(list.files("./_posts"), pattern="\\.html")]
post <- posts[1]
for (post in posts){
post_name <- gsub(post, pattern="\\.html", replacement="")
url <- file.path("/_posts", post)
metadata <- readr::read_csv(file.path("./_posts", "metadata", paste(post_name, ".csv", sep="")))
title <- metadata$title
excerpt <- as.character(metadata$excerpt)
# post_text <- readr::read_file(file.path("./_posts", post))
# title <- gsub(post_text, pattern=".*\\\ntitle: \\\"", replacement="")
# title <- gsub(title, pattern="\\\".*", replacement="")
img_link <- metadata$image_link
cat('<h3><a href=', url, '>', title,' </a></h3><br>')
cat(excerpt, "...")
cat(img_link)
}
quo()
?quo
url <- quo(file.path("/_posts", post))
enquo()
?enquo()
url <- rlang::quo(file.path("/_posts", post))
url
url <- rlang::enquo(file.path("/_posts", post))
expr
?expr
url <- file.path("/_posts", post)
url <- enquo(url)
url <- rlang::enquo(url)
url <- rlang::expr(url)
url <- file.path("/_posts", post)
url <- rlang::expr(url)
posts <- list.files("./_posts")[grepl(list.files("./_posts"), pattern="\\.html")]
posts <- list.files("./_posts")[grepl(list.files("./_posts"), pattern="\\.html")]
post <- posts[1]
for (post in posts){
post_name <- gsub(post, pattern="\\.html", replacement="")
url <- file.path("/_posts", post)
metadata <- readr::read_csv(file.path("./_posts", "metadata", paste(post_name, ".csv", sep="")))
title <- metadata$title
excerpt <- as.character(metadata$excerpt)
# post_text <- readr::read_file(file.path("./_posts", post))
# title <- gsub(post_text, pattern=".*\\\ntitle: \\\"", replacement="")
# title <- gsub(title, pattern="\\\".*", replacement="")
img_link <- metadata$image_link
cat('<h3><a href= "', url, '">', title,' </a></h3><br>')
cat(excerpt, "...")
cat(img_link)
}
url <- file.path("../_posts", post)
{% for blog in blogs %}
{% for article in blog.articles %}
{{ article.title }}
{% endfor %}
{% endfor %}
## Full Projects
[Economic Value of Pacific Herring in the Strait of Georgia](https://timcashion.github.io/PacificHerring/)
- [Github Repository](https://github.com/timcashion/PacificHerring/)
<a href="https://timcashion.github.io/PacificHerring/"><img src="/images/herring_catches.png" heigh=400 width=400 /></a>
![](../images/lang_plot.png)
Want to read the full article? Check it our here on [Medium](https://towardsdatascience.com/vancouvers-data-scientist-market-24c43307d784)
